<?php 
	namespace App\Http\Controllers\Admin;

    use Illuminate\Support\Facades\Session;
	use JerryLib\Model\CommonModel;
	use JerryLib\System\Common;
    use Request;

    class UserController extends CommonController {

        /**
         * 用户列表
         */
        public function getIndex() {

            $page = isset($this->input['page']) ? $this->input['page'] : 1;
            // 查询用户列表
            $wheres = $params = array();
            if(isset($this->input['nickname'])) {
                $wheres[] = "nickname like '%{$this->input['nickname']}%'";
                // $params[] = $this->input['nickname'];
            }

            $where = count($wheres)>0 ? ' where ' . implode(' and ', $wheres) : '';

            $sql = "select * from p_users $where";
            
            $data = $this->common_model->prepare($sql, $params)->fetchPage($page, 20);

            $page_str = Common::page_str($data, $this->naction);

            return view($this->naction, [ 'data'=>$data['page_list'], 'page_str'=>$page_str]);
        }

        /**
         * 新增用户
         */
        public function anyAdd() {

            // 插入/修改用户
            $data = array();
            if(isset($this->input['uid'])) {
                $id = intval($this->input['uid']);

                $sql = "select * from p_users where uid=?";

                $data = $this->common_model->prepare($sql, $id)->fetchRow();                
            }

            if(isset($this->input['submit'])) {

                if(!Common::checkUser($this->input['account'])) {
                    $this->redirect('', '用户名格式错误');
                }
                if(isset($this->input['password']) && !Common::checkPwd($this->input['password'])) {
                    $this->redirect('', '密码格式错误');
                }
                if(!(Common::checkUser($this->input['nickname'], 'CN'))) {
                    $this->redirect('', '昵称格式错误');
                }

                $insert_arr = [
                    'account'  =>  $this->input['account'],
                    'nickname'  =>  $this->input['nickname'],
                    'status'  =>  $this->input['status'],
                    'level'  =>  $this->input['level'],
                    'groupids'  =>  $this->input['groupids'],
                    'creater'  =>  Session::get('_AUTH_USER_NICKNAME'),
                    'createtime'  =>  date('Y-m-d H:i:s'),
                ];

                if(isset($this->input['password'])) {
                    $insert_arr['password'] = Common::password($this->input['account'], $this->input['password']);
                }

                if(isset($this->input['uid'])) {
                    $result = $this->common_model->insert_update('p_users', $insert_arr, true);
                } else {
                    //验证当前用户名是否唯一
                    $check_account = $this->common_model->prepare("select * from p_users where account=?", $this->input['account'])->fetchRow();
                    if(count($check_account)>0) {
                        $this->redirect('', '用户已存在！');
                    }

                    $result = $this->common_model->insert_command('p_users', $insert_arr, true);
                }
                if($result) {
                    $this->redirect('Admin/User/index', '用户插入/更新成功！');
                } else {
                    $this->redirect('', '用户插入/更新失败！');
                }
            }

            // 查询用户组
            $group_data = $this->common_model->prepare("select id,name from p_usergroup where status=1")->fetchAll();

            return $this->render(['group_data'=>$group_data, 'data'=>$data]);
        }

        /**
         * 禁用/启用用户
         */
        public function getEnable() {

            $str = $this->input['status']==0 ? '禁用' : '启用';
            $sql = "update p_users set status=? where uid=?";

            $result = $this->common_model->prepare($sql, $this->input['status'], $this->input['uid'])->update_command();

            if($result) {
                $this->redirect('Admin/User/index', '用户'.$str.'成功！');
            } else {
                $this->redirect('Admin/User/index', '用户'.$str.'失败！');
            }

        }

        /**
         * 删除用户
         */
        public function getDelete() {
            if(isset($this->input['uid'])) {
                $uid = intval($this->input['uid']);

                $sql = "delete from p_users where uid=?";

                $result = $this->common_model->prepare($sql, $uid)->delete_command();

                if($result) {
                    $this->redirect('Admin/User/index', '用户删除成功！');
                } else {
                    $this->redirect('', '用户删除失败！');
                }
            }
        }

        public function postInsert(Request $request) {
            //首先获取所有当前表模型
            $post = $request::all();
            //在插入数据的时候，我们首先要验证外来参数
            //1.验证合法性
            //2.验证是否唯一
            //3.验证是否必须

            $this->checkPost($post);

            //验证当前用户名是否唯一
            $data = tabHad::Init('p_users')->select('uid', "account='{$post['account']}'");
            if(count($data)>0) {
                throw new \Exception('用户已存在');
            }

            //通过验证然后入库
            $post['password'] = Common::password($post['account'], $post['password']);
            $post['createtime'] = date('Y-m-d H:i:s');
            $uid = tabHad::Init('p_users')->insert($post);
            if($uid>0) {
                return response()->json(array('ret'=>0, 'msg'=>'数据插入成功'));
            } else {
                return response()->json(array('ret'=>-1, 'msg'=>'数据插入失败'));
            }
        }

        public function postUpdate(Request $request) {
            $post = $request::all();
            $this->checkPost($post);

        }

        private function checkPost($post) {
            if(!Common::checkUser($post['account'])) {
                throw new \Exception('用户名格式错误');
            }
            if(!Common::checkPwd($post['password'])) {
                throw new \Exception('密码格式错误');
            }
            if(!(Common::checkUser($post['nickname'], 'CN'))) {
                throw new \Exception('昵称格式错误');
            }
            $post['status'] = (int)$post['status'];
            if($post['status']!=0 && $post['status']!=1) {
                throw new \Exception('状态格式错误');
            }

        }

	}
?>