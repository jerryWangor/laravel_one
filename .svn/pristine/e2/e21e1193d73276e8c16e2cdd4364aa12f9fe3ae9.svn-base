<?php namespace JerryLib\Model;
	use Illuminate\Database\Eloquent\Model;
	use DB;
    use JerryLib\System\Init;
    use JerryLib\System\Common;

	/**
	 * 扩展出来的公共model
	 */
	class CommonModel extends Model {

		use Init;

        protected $config; //配置文件
        protected $attr; //数据数组
        protected $debug = false; // 是否开启调试模式
        private $db; // 当前实例化对象
        private $sql; //当前sql语句
        private $params; //当前sql参数
        private $result; //当前结果集
        private static $_instance = null; //单例模式实例化标识

		/**
		 * 构造函数
		 */
        public function __construct($db = 'laravel') {
            $this->attr['db'] = $db;
            $this->db = DB::connection($db);
            return $this;
        }

        /**
         * 克隆函数，防止克隆
         */
        protected function __clone() {
            throw new \Exception('对不起,不能克隆!');
        }

        /**
         * 获得表所在的数据库
         * @return mixed
         */
        protected function getDBName() {
            return $this->attr['db'];
        }

        /**
         * 数据验证，预防SQL注入
         * @param $data
         */
        protected function dataValidate($data) {

        }

        /**
         * 数据过滤
         * @param $data
         */
        protected function dataFilter($data, $type) {

        }

        /**
         * sql执行前处理函数
         */
        public function prepare($command, $params = array()){

	        if(func_num_args()!=2 || !is_array($params)){
	            $_args = func_get_args();
	            $command = array_shift($_args);
	            $params = $_args;
	        }
	    	$this->sql = html_entity_decode($command, ENT_QUOTES);
	    	$this->params = $params;
	        // 对$command进行数据过滤
	        if ( $this->debug ) echo $this->sql;
	        $this->debug = false;
	        
	        return $this;
	    }

	    /**
	     *执行sql
	     */
	    public function execute() {
	    	return $this->db->select($this->sql, $this->params) ? true : false;
	    }

	    // 取出一条结果
	    public function fetchRow() {
	        $query = $this->execute();
	        return $query ? $query->first() : null;
	    }

	    public function fetchAll() {
	        $query = $this->execute();
	        $rows = array();
	        if($query){
	            $rows = array();
	        }
	        return $rows;
	    }

        /**
         * 插入语句
         */
        public function insert($table = null, $data = array(), $get_id = false) {
        	if($get_id) {
        		return $this->db->table($table)->insertGetId($data);
        	}
            return $this->db->table($table)->insert($data);
        }

        /**
         * 原生查询语句
         */
        public function select() {

            // return self::$_result = Common::objectToArray(DB::select($this->sql));
        }


	}
?>